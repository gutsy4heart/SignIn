version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: signin_postgres
    environment:
      POSTGRES_DB: signin_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - signin_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ASP.NET Core Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: signin_backend
    ports:
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=signin_db;Username=postgres;Password=postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - signin_network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: signin_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - signin_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  signin_network:
    driver: bridge 